#!/bin/bash -xe

if [ -z "$PROVISIONING_IP" ]; then
    echo "ERROR: PROVISIONING_IP environment variable unset."
    exit 1
fi

if [ -z "$PROVISIONING_INTERFACE" ]; then
  # If no provisioning interface is specified, then we're probably in
  # the mode where the provisioning network is optional, so to avoid a
  # hard dependency of forcing users to specify the interface, we detect
  # which network interface has the IP's from the machine network.
  IP_ONLY=$(echo "$PROVISIONING_IP" | cut -d/ -f1)
  PROVISIONING_INTERFACE=$(ip route get "$IP_ONLY" | grep -Po '(?<=(dev )).*(?= src| proto)')
else
  # Get rid of any DHCP addresses only if we have a dedicated
  # provisioning interface
  /usr/sbin/ip address flush dev "$PROVISIONING_INTERFACE"
fi

# In case the IP has lapsed since we set it in the init container.
/usr/sbin/ip addr add "$PROVISIONING_IP" dev "$PROVISIONING_INTERFACE" valid_lft 10 preferred_lft 10 || true

while true; do
    /usr/sbin/ip addr change "$PROVISIONING_IP" dev "$PROVISIONING_INTERFACE" valid_lft 10 preferred_lft 10
    sleep 5
done

